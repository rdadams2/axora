{"ast":null,"code":"var _jsxFileName = \"/Users/raeadams/rae_axora/axora/src/components/ui/ProgressBar.js\";\nimport React from 'react';\n\n/**\n * Progress bar component with customizable styling\n * \n * @param {number} value - Current progress value (default: 0)\n * @param {number} max - Maximum progress value (default: 100)\n * @param {string} className - Additional CSS classes\n * @param {boolean} showValue - Whether to show percentage value (default: true)\n * @param {string} color - Progress bar color class (default: 'bg-brand')\n * @param {string} height - Progress bar height class (default: 'h-3')\n * @param {Object} props - Additional props passed to component\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  value = 0,\n  max = 100,\n  className = '',\n  showValue = true,\n  color = 'bg-brand',\n  height = 'h-3',\n  ...props\n}) => {\n  const percentage = Math.min(Math.max(value / max * 100, 0), 100);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `w-full ${className}`,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `w-full bg-gray-100 rounded-full ${height}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${color} ${height} rounded-full transition-all duration-500 ease-out`,\n        style: {\n          width: `${percentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), showValue && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-sm font-medium text-brand mt-1\",\n      children: [Math.round(percentage), \"% complete\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProgressBar","value","max","className","showValue","color","height","props","percentage","Math","min","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","round","_c","$RefreshReg$"],"sources":["/Users/raeadams/rae_axora/axora/src/components/ui/ProgressBar.js"],"sourcesContent":["import React from 'react';\n\n/**\n * Progress bar component with customizable styling\n * \n * @param {number} value - Current progress value (default: 0)\n * @param {number} max - Maximum progress value (default: 100)\n * @param {string} className - Additional CSS classes\n * @param {boolean} showValue - Whether to show percentage value (default: true)\n * @param {string} color - Progress bar color class (default: 'bg-brand')\n * @param {string} height - Progress bar height class (default: 'h-3')\n * @param {Object} props - Additional props passed to component\n */\nconst ProgressBar = ({ \n  value = 0, \n  max = 100, \n  className = '', \n  showValue = true,\n  color = 'bg-brand',\n  height = 'h-3',\n  ...props \n}) => {\n  const percentage = Math.min(Math.max((value / max) * 100, 0), 100);\n  \n  return (\n    <div className={`w-full ${className}`} {...props}>\n      <div className={`w-full bg-gray-100 rounded-full ${height}`}>\n        <div \n          className={`${color} ${height} rounded-full transition-all duration-500 ease-out`}\n          style={{ width: `${percentage}%` }}\n        />\n      </div>\n      {showValue && (\n        <div className=\"text-sm font-medium text-brand mt-1\">\n          {Math.round(percentage)}% complete\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProgressBar;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA,SAAAC,MAAA,IAAAC,OAAA;AAWA,MAAMC,WAAW,GAAGA,CAAC;EACnBC,KAAK,GAAG,CAAC;EACTC,GAAG,GAAG,GAAG;EACTC,SAAS,GAAG,EAAE;EACdC,SAAS,GAAG,IAAI;EAChBC,KAAK,GAAG,UAAU;EAClBC,MAAM,GAAG,KAAK;EACd,GAAGC;AACL,CAAC,KAAK;EACJ,MAAMC,UAAU,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACP,GAAG,CAAED,KAAK,GAAGC,GAAG,GAAI,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;EAElE,oBACEH,OAAA;IAAKI,SAAS,EAAE,UAAUA,SAAS,EAAG;IAAA,GAAKI,KAAK;IAAAI,QAAA,gBAC9CZ,OAAA;MAAKI,SAAS,EAAE,mCAAmCG,MAAM,EAAG;MAAAK,QAAA,eAC1DZ,OAAA;QACEI,SAAS,EAAE,GAAGE,KAAK,IAAIC,MAAM,oDAAqD;QAClFM,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAGL,UAAU;QAAI;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLb,SAAS,iBACRL,OAAA;MAAKI,SAAS,EAAC,qCAAqC;MAAAQ,QAAA,GACjDF,IAAI,CAACS,KAAK,CAACV,UAAU,CAAC,EAAC,YAC1B;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACE,EAAA,GA1BInB,WAAW;AA4BjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}