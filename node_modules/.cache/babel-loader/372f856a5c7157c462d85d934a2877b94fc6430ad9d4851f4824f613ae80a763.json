{"ast":null,"code":"var _jsxFileName = \"/Users/raeadams/rae_axora/axora/src/components/ui/Button.js\";\nimport React from 'react';\n\n/**\n * Button component with multiple variants and sizes\n * \n * @param {React.ReactNode} children - Button content\n * @param {React.ElementType} as - Component to render as (default: 'button')\n * @param {'primary' | 'secondary' | 'outline' | 'ghost'} variant - Button style variant\n * @param {'sm' | 'md' | 'lg'} size - Button size\n * @param {string} className - Additional CSS classes\n * @param {boolean} disabled - Whether button is disabled\n * @param {Function} onClick - Click handler\n * @param {'button' | 'submit' | 'reset'} type - Button type (for button elements only)\n * @param {Object} props - Additional props passed to component\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = ({\n  children,\n  as: Component = 'button',\n  variant = 'primary',\n  size = 'md',\n  className = '',\n  disabled = false,\n  onClick,\n  type = 'button',\n  ...props\n}) => {\n  const baseClasses = 'font-medium transition-all duration-200 rounded-full inline-flex items-center justify-center gap-2';\n  const variants = {\n    primary: 'bg-brand text-white hover:bg-brand/90 hover:shadow-lg hover:scale-105 disabled:bg-gray-300',\n    secondary: 'bg-white border-2 border-gray-200 text-gray-700 hover:border-brand hover:text-brand disabled:bg-gray-100',\n    outline: 'border border-brand text-brand hover:bg-brand hover:text-white disabled:border-gray-300 disabled:text-gray-300',\n    ghost: 'text-brand hover:bg-brand/10 disabled:text-gray-300'\n  };\n  const sizes = {\n    sm: 'px-4 py-2 text-sm',\n    md: 'px-6 py-3 text-base',\n    lg: 'px-8 py-4 text-lg'\n  };\n  const combinedProps = {\n    className: `${baseClasses} ${variants[variant]} ${sizes[size]} ${className} ${disabled ? 'cursor-not-allowed opacity-60' : 'cursor-pointer'}`,\n    disabled,\n    onClick,\n    ...props\n  };\n\n  // Only add type prop for actual button elements\n  if (Component === 'button') {\n    combinedProps.type = type;\n  }\n  return /*#__PURE__*/_jsxDEV(Component, {\n    ...combinedProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Button","children","as","Component","variant","size","className","disabled","onClick","type","props","baseClasses","variants","primary","secondary","outline","ghost","sizes","sm","md","lg","combinedProps","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/raeadams/rae_axora/axora/src/components/ui/Button.js"],"sourcesContent":["import React from 'react';\n\n/**\n * Button component with multiple variants and sizes\n * \n * @param {React.ReactNode} children - Button content\n * @param {React.ElementType} as - Component to render as (default: 'button')\n * @param {'primary' | 'secondary' | 'outline' | 'ghost'} variant - Button style variant\n * @param {'sm' | 'md' | 'lg'} size - Button size\n * @param {string} className - Additional CSS classes\n * @param {boolean} disabled - Whether button is disabled\n * @param {Function} onClick - Click handler\n * @param {'button' | 'submit' | 'reset'} type - Button type (for button elements only)\n * @param {Object} props - Additional props passed to component\n */\nconst Button = ({ \n  children, \n  as: Component = 'button',\n  variant = 'primary', \n  size = 'md', \n  className = '', \n  disabled = false, \n  onClick,\n  type = 'button',\n  ...props \n}) => {\n  const baseClasses = 'font-medium transition-all duration-200 rounded-full inline-flex items-center justify-center gap-2';\n  \n  const variants = {\n    primary: 'bg-brand text-white hover:bg-brand/90 hover:shadow-lg hover:scale-105 disabled:bg-gray-300',\n    secondary: 'bg-white border-2 border-gray-200 text-gray-700 hover:border-brand hover:text-brand disabled:bg-gray-100',\n    outline: 'border border-brand text-brand hover:bg-brand hover:text-white disabled:border-gray-300 disabled:text-gray-300',\n    ghost: 'text-brand hover:bg-brand/10 disabled:text-gray-300'\n  };\n  \n  const sizes = {\n    sm: 'px-4 py-2 text-sm',\n    md: 'px-6 py-3 text-base',\n    lg: 'px-8 py-4 text-lg'\n  };\n  \n  const combinedProps = {\n    className: `${baseClasses} ${variants[variant]} ${sizes[size]} ${className} ${disabled ? 'cursor-not-allowed opacity-60' : 'cursor-pointer'}`,\n    disabled,\n    onClick,\n    ...props\n  };\n\n  // Only add type prop for actual button elements\n  if (Component === 'button') {\n    combinedProps.type = type;\n  }\n  \n  return (\n    <Component {...combinedProps}>\n      {children}\n    </Component>\n  );\n};\n\nexport default Button;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,SAAAC,MAAA,IAAAC,OAAA;AAaA,MAAMC,MAAM,GAAGA,CAAC;EACdC,QAAQ;EACRC,EAAE,EAAEC,SAAS,GAAG,QAAQ;EACxBC,OAAO,GAAG,SAAS;EACnBC,IAAI,GAAG,IAAI;EACXC,SAAS,GAAG,EAAE;EACdC,QAAQ,GAAG,KAAK;EAChBC,OAAO;EACPC,IAAI,GAAG,QAAQ;EACf,GAAGC;AACL,CAAC,KAAK;EACJ,MAAMC,WAAW,GAAG,oGAAoG;EAExH,MAAMC,QAAQ,GAAG;IACfC,OAAO,EAAE,4FAA4F;IACrGC,SAAS,EAAE,0GAA0G;IACrHC,OAAO,EAAE,gHAAgH;IACzHC,KAAK,EAAE;EACT,CAAC;EAED,MAAMC,KAAK,GAAG;IACZC,EAAE,EAAE,mBAAmB;IACvBC,EAAE,EAAE,qBAAqB;IACzBC,EAAE,EAAE;EACN,CAAC;EAED,MAAMC,aAAa,GAAG;IACpBf,SAAS,EAAE,GAAGK,WAAW,IAAIC,QAAQ,CAACR,OAAO,CAAC,IAAIa,KAAK,CAACZ,IAAI,CAAC,IAAIC,SAAS,IAAIC,QAAQ,GAAG,+BAA+B,GAAG,gBAAgB,EAAE;IAC7IA,QAAQ;IACRC,OAAO;IACP,GAAGE;EACL,CAAC;;EAED;EACA,IAAIP,SAAS,KAAK,QAAQ,EAAE;IAC1BkB,aAAa,CAACZ,IAAI,GAAGA,IAAI;EAC3B;EAEA,oBACEV,OAAA,CAACI,SAAS;IAAA,GAAKkB,aAAa;IAAApB,QAAA,EACzBA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhB,CAAC;AAACC,EAAA,GA3CI1B,MAAM;AA6CZ,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}